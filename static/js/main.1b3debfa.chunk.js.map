{"version":3,"sources":["components/Counter.jsx","components/GHBadge.jsx","components/Child.jsx","components/Parent.jsx","components/Toggle.jsx","logo.svg","App.jsx","reportWebVitals.js","index.jsx"],"names":["Counter","useState","count","setCount","onClick","GHBadge","props","username","repoName","repoUrl","badgeUrl","altText","className","href","src","alt","Child","value","setValue","Parent","Toggle","text","isHidden","setIsHidden","toString","App","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAEe,SAASA,IACtB,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,qCACE,mDACA,4BACE,qFAEF,4BACE,2CAAcD,OAEhB,wBAAQE,QAAS,kBAAMD,EAASD,EAAQ,IAAxC,eARF,OAUE,wBAAQE,QAAS,kBAAMD,EAASD,EAAQ,IAAxC,kBChBS,SAASG,EAAQC,GAC9B,IAAQC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SAEZC,EAAO,6BAAyBF,EAAzB,YAAqCC,GAC5CE,EAAQ,iDAA6CH,EAA7C,oBAAiEC,EAAjE,2BACRG,EAAO,UAAMJ,EAAN,cAAoBC,GAEjC,OACE,qBAAKI,UAAU,SAAf,SACE,mBAAGC,KAAMJ,EAAT,SACE,qBAAKK,IAAKJ,EAAUK,IAAKJ,QCVlB,SAASK,EAAT,GAAqC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACE,sBAAKN,UAAU,QAAf,UACE,iDAEA,8BACE,wBAAQR,QAAS,kBAAMc,EAAS,MAAhC,0BAGF,wCAAWD,QCNF,SAASE,IACtB,MAA0BlB,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KAMA,OACE,sBAAKN,UAAU,SAAf,UACE,kDAEA,4BACE,8KAMF,8BACE,wBAAQR,QAAS,WAfrBc,EAeyC,MAArC,0BAGF,cAACF,EAAD,CAAOC,MAAOA,EAAOC,SAAUA,OCvBtB,SAASE,EAAOd,GAC7B,IAAQe,EAASf,EAATe,KAER,EAAgCpB,oBAAS,GAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KAMA,OACE,qCACE,kDAEA,4BACE,qHAMF,wBAAQnB,QAfK,WACfmB,GAAaD,IAcX,sBAEA,4BACE,8CAAiBA,EAASE,gBAG5B,6BAAKF,GAAYD,OC5BR,UAA0B,iCCO1B,SAASI,IACtB,OACE,sBAAKb,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKE,IAAKY,EAAMd,UAAU,WAAWG,IAAI,SAEzC,kDACA,4EAEA,cAACV,EAAD,CAASE,SAAS,gBAAgBC,SAAS,wBAG7C,iCACE,cAACR,EAAD,IAEA,cAACoB,EAAD,CAAQC,KAAK,sBAEb,cAACF,EAAD,U,UCZOQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1b3debfa.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <>\n      <h2>Counter component</h2>\n      <p>\n        <i>A simple functional component to change an integer</i>\n      </p>\n      <p>\n        <code>count: {count}</code>\n      </p>\n      <button onClick={() => setCount(count + 1)}>+</button>\n      &nbsp;\n      <button onClick={() => setCount(count - 1)}>-</button>\n    </>\n  );\n}\n","export default function GHBadge(props) {\n  const { username, repoName } = props;\n\n  const repoUrl = `https://github.com/${username}/${repoName}`;\n  const badgeUrl = `https://img.shields.io/static/v1?label=${username}&message=${repoName}&color=blue&logo=github`;\n  const altText = `${username} - ${repoName}`;\n\n  return (\n    <div className=\"GHPage\">\n      <a href={repoUrl}>\n        <img src={badgeUrl} alt={altText} />\n      </a>\n    </div>\n  );\n}\n","export default function Child({ value, setValue }) {\n  return (\n    <div className=\"Child\">\n      <h3>Child component</h3>\n\n      <div>\n        <button onClick={() => setValue(456)}>Set to 456</button>\n      </div>\n\n      <p>Value: {value}</p>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport Child from './Child';\n\nexport default function Parent() {\n  const [value, setValue] = useState('');\n\n  const setOuterValue = (v) => {\n    setValue(v);\n  };\n\n  return (\n    <div className=\"Parent\">\n      <h2>Parent component</h2>\n\n      <p>\n        <i>\n          Demo of passing data between a child and parent component - both the\n          value and state hook function are passed to the child to be used there\n        </i>\n      </p>\n\n      <div>\n        <button onClick={() => setOuterValue(123)}>Set to 123</button>\n      </div>\n\n      <Child value={value} setValue={setValue} />\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nexport default function Toggle(props) {\n  const { text } = props;\n\n  const [isHidden, setIsHidden] = useState(false);\n\n  const showHide = () => {\n    setIsHidden(!isHidden);\n  };\n\n  return (\n    <>\n      <h2>Toggle component</h2>\n\n      <p>\n        <i>\n          A simple functional component to change a boolean value and show or a\n          hide a value\n        </i>\n      </p>\n\n      <button onClick={showHide}>Click me</button>\n\n      <p>\n        <code>isHidden: {isHidden.toString()}</code>\n      </p>\n\n      <p>{!isHidden && text}</p>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import './App.css';\nimport Counter from './components/Counter';\nimport GHBadge from './components/GHBadge';\nimport Parent from './components/Parent';\nimport Toggle from './components/Toggle';\nimport logo from './logo.svg';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <h1>React Quickstart</h1>\n        <p>A template project deployed to GitHub Pages</p>\n\n        <GHBadge username=\"MichaelCurrin\" repoName=\"react-quickstart\" />\n      </header>\n\n      <main>\n        <Counter />\n\n        <Toggle text=\"Make me disappear\" />\n\n        <Parent />\n      </main>\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}